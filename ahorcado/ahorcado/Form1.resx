<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imagenHorrocrux7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Zh/HAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AIIDAwPvHh4e/ywsLP4ZGRn/AQEB6wAAAHhGRkYDAAAAAQsLCwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAACAAAAAAYGBg4AAABAAAAAVgAAAEUEBAQUAAAAAAAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAACAAAAAAUFBREAAABDAAAAVgAAAEAGBgYOAAAAAAAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAADAQEBAAEBAQABAQEAAQEBAAICAgAAAAADAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAADAgICAAEBAQABAQEAAQEBAAEBAQAAAAADAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABQAAAAAAAAA1AAAAVgAAAAAAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAQAAAADAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAALoAAACRAAAAAAAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAvAAAA6wAA
        AB0AAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAA
        AKMAAACiAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAbAAAA6gAAADwAAAAhAAAAQAAAAA0AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAAAAAAHEAAAD/AAAA3wAAAOgAAAD/AAAAMAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAHwAAAEUAAAASAAAAegAAAMwAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAADXAAAAYAAAAAAAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAVAAAAN4AAAAEAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAADMAAAAfAAA
        AAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AHYAAAAYAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAISWkhBQSSCiIBaARQAJAAqACQAVAAYACAAGAAIABgAEAAAAAQAAAAqAC
        QAUAAAAAQAAAAqQSSCXRRaKL5JPIJ/iT///5Ff//+Sf///oF///6Bf//+gn///7J///6if///JP///0T
        ////n////Rf///+///////////////////8=
</value>
  </data>
</root>